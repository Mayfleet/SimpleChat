CMAKE_MINIMUM_REQUIRED(VERSION 3.1 FATAL_ERROR)

IF(POLICY CMP0020)
    CMAKE_POLICY(SET CMP0020 NEW)
ENDIF()

PROJECT(SimpleChat C CXX)
STRING(TOLOWER "${PROJECT_NAME}" PROJECT_NAME_LOWERCASE)

SET(VERSION_MAJOR 0)
SET(VERSION_MINOR 1)
SET(VERSION_PATCH 1)

SET(VERSION_LONG ${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH})
SET(VERSION_SHORT ${VERSION_MAJOR}.${VERSION_MINOR})

IF(WIN32)
    SET(TARGET_PLATFORM "Windows")
ELSEIF(APPLE)
    SET(TARGET_PLATFORM "MacOS")
ENDIF()

SET(APPLICATION_TITLE "Simple Chat")

SET(ORGANIZATION_NAME "Mayfleet")
SET(ORGANIZATION_DOMAIN "mayfleet.com")

ADD_DEFINITIONS(
    -DPROJECT_NAME="${PROJECT_NAME}"
    -DVERSION_MAJOR="${VERSION_MAJOR}"
    -DVERSION_MINOR="${VERSION_MINOR}"
    -DVERSION_PATCH="${VERSION_PATCH}"
    -DVERSION_LONG="${VERSION_LONG}"
    -DVERSION_SHORT="${VERSION_SHORT}"
    -DAPPLICATION_TITLE="${APPLICATION_TITLE}"
    -DORGANIZATION_NAME="${ORGANIZATION_NAME}"
    -DORGANIZATION_DOMAIN="${ORGANIZATION_DOMAIN}"
)

SET(CMAKE_BUILD_TYPE "Release")
SET(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR})

SET(CMAKE_INCLUDE_CURRENT_DIR ON)
SET(CMAKE_AUTOMOC ON)

IF(NOT PRODUCTION_MODE)
    SET(DEVELOPMENT_MODE TRUE)
    ADD_DEFINITIONS(-DDEVELOPMENT_MODE)
ENDIF()

INCLUDE(${CMAKE_CURRENT_SOURCE_DIR}/../Environment.txt OPTIONAL)

# Adjust CCache if exists

FIND_PROGRAM(CCACHE_EXECUTABLE NAMES ccache)

IF(CCACHE_EXECUTABLE)
    SET_PROPERTY(GLOBAL PROPERTY RULE_LAUNCH_COMPILE "${CCACHE_EXECUTABLE}")
    SET_PROPERTY(GLOBAL PROPERTY RULE_LAUNCH_LINK "${CCACHE_EXECUTABLE}")
ENDIF()

# Perform platform-specific adjustments

IF(APPLE)
    SET(CMAKE_OSX_DEPLOYMENT_TARGET 10.5)

    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -ObjC++")
    SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -ObjC++")

ELSEIF(WIN32)
    ADD_DEFINITIONS(
        -D_MBCS
        -DNDEBUG
        -D_WINDOWS
        -D_USRDLL
        -DPCPROXYDLL_EXPORTS
        -DNOMINMAX
        -DUNICODE
        -D_UNICODE
        -D_CRT_NON_CONFORMING_SWPRINTFS
        -D_CRT_SECURE_NO_DEPRECATE
        -D_WIN32_WINNT=0x0502
    )

    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /nologo /Zi /Zc:wchar_t")

    SET(CMAKE_MODULE_LINKER_FLAGS "${CMAKE_MODULE_LINKER_FLAGS} /DEBUG")
    SET(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} /DEBUG")

    IF(DEVELOPMENT_MODE)
        SET(CMAKE_MODULE_LINKER_FLAGS "${CMAKE_MODULE_LINKER_FLAGS} /INCREMENTAL")
        SET(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} /INCREMENTAL")
    ENDIF()
ENDIF()

# Find Qt5 package

IF(QT_ROOT_DIR)
    SET(CMAKE_PREFIX_PATH ${QT_ROOT_DIR} ${CMAKE_PREFIX_PATH})
ENDIF()

FIND_PACKAGE(Qt5Widgets REQUIRED)
FIND_PACKAGE(Qt5WebSockets REQUIRED)

SET(QT_LIBRARIES Qt5::Widgets Qt5::WebSockets)

# Find some Qt paths

IF(NOT QT_QMAKE_EXECUTABLE)
    FIND_PROGRAM(QT_QMAKE_EXECUTABLE NAMES qmake)
ENDIF()

GET_FILENAME_COMPONENT(QT_BINARY_DIR "${QT_QMAKE_EXECUTABLE}" PATH)
GET_FILENAME_COMPONENT(QT_PLUGINS_DIR "${QT_BINARY_DIR}/../plugins" ABSOLUTE)
GET_FILENAME_COMPONENT(QT_INCLUDE_DIR "${QT_BINARY_DIR}/../include" ABSOLUTE)
GET_FILENAME_COMPONENT(QT_LIBRARY_DIR "${QT_BINARY_DIR}/../lib" ABSOLUTE)

# Setup project files

SET(
    SIMPLECHAT_SRCS
    Main.cpp
    MainWindow.cpp
    SimpleChatClient.cpp
)

SET(
    SIMPLECHAT_UIS
    MainWindow.ui
)

SET(
    SIMPLECHAT_RCS
    Resources.qrc
)

QT5_WRAP_UI(SIMPLECHAT_UI_SRCS ${SIMPLECHAT_UIS})
QT5_ADD_RESOURCES(SIMPLECHAT_RC_SRCS ${SIMPLECHAT_RCS})

IF(APPLE)
    SET(SIMPLECHAT_ICON SimpleChat.icns)

    SET_SOURCE_FILES_PROPERTIES(
        ${CMAKE_CURRENT_SOURCE_DIR}/${SIMPLECHAT_ICON}
        PROPERTIES MACOSX_PACKAGE_LOCATION Resources
    )

    SET(
        SIMPLECHAT_RC_SRCS
        ${SIMPLECHAT_RC_SRCS}
        ${CMAKE_CURRENT_SOURCE_DIR}/${SIMPLECHAT_ICON}
    )
ELSEIF(WIN32)
    SET(SIMPLECHAT_ICON SimpleChat.ico)
    SET(APPLICATION_ICON ${SIMPLECHAT_ICON})

    CONFIGURE_FILE(
        ${CMAKE_CURRENT_SOURCE_DIR}/SimpleChat.rc.in
        ${CMAKE_CURRENT_BINARY_DIR}/SimpleChat.rc
    )

    LIST(APPEND SIMPLECHAT_SRCS ${CMAKE_CURRENT_BINARY_DIR}/SimpleChat.rc)
ENDIF()

# Setup executable

SET(SIMPLECHAT_TARGET ${PROJECT_NAME})

ADD_EXECUTABLE(
    ${SIMPLECHAT_TARGET} WIN32 MACOSX_BUNDLE
    ${SIMPLECHAT_SRCS}
    ${SIMPLECHAT_UI_SRCS}
    ${SIMPLECHAT_RC_SRCS}
)

TARGET_LINK_LIBRARIES(
    ${SIMPLECHAT_TARGET}
    ${SIMPLECHAT_LINK_LIBRARIES}
    ${QT_LIBRARIES}
)

# Prepare release

IF(APPLE)
    INCLUDE(ReleaseMacOS)
ELSEIF(WIN32)
    INCLUDE(ReleaseWindows)
ENDIF()
